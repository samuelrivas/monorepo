#!/usr/bin/env bash
#
# This script requires next environmet variables to be set
#  * SAMS_SH_LIB: the lib directory to load utils from
#  * CUSTOM_PKGS the path to custom-pkgs.nix, where the sandboxes reside

set -e
set -u

source $SH_LIB/prelude.sh

## Constants
##====================================================================

## Functions
##====================================================================
usage() {
    echo
    echo "$PROGNAME [<project-to-sandbox>]"
    echo
    echo "Run without arguments lists the available sandboxed environemtns"
    echo
    echo "<project-to-sandbox> must be defined in the expression pointed at by"
    echo "the CUSTOM_PKGS environment variable"
    echo
}

validate_env() {
    if [[ -z "${CUSTOM_PKGS:-}" || ! -f "$CUSTOM_PKGS" ]]; then
        fail "CUSTOM_PKGS should point to an nix expressions file"
    fi

    if (($NARGS > 1)); then
        usage
        exit 1
    fi
}

nix_env() {
    local expression="$1"
    nix-env -qaP -f "$expression" \
        | awk '{print $1}'
}

sandbox() {
    local derivation="$1"
    local expression="$2"
    local roots_dir="$3"

    nix-shell                                                   \
        --pure                                                  \
        --indirect --add-root "$roots_dir/$derivation"          \
        --command "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK; return" \
        -A "$derivation"                                        \
        "$expression"
}

main() {
    validate_env

    ## Write the roots to tmp for now, we should write to var if running the
    ## nix-installed version of this
    local roots_dir="/tmp/$PROGNAME/sandboxes"
    local derivation="${ARGS[0]:-}"

    if [[ -z "$derivation" ]]; then
        nix_env "$CUSTOM_PKGS"
    else
        mkdir -p "$roots_dir"
        sandbox "$derivation" "$CUSTOM_PKGS" "$roots_dir"
    fi
}

## Functions
##====================================================================

main
