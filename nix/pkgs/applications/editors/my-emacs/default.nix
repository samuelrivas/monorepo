## Generate a wrapped emacs with all required libraries and executables in the
## path
##
## "all" here means, anything required by the configuration generated by the
## emacs-config derivation in this monorepo
##
## Since some packages carry some heavy dependencies with them, you can
## denylist them if you need to generate an emacs but don't want to spend the
## time on waiting for a plethora of things to download (check emacs-config.nix)
{
  aspell-wrapped,
  emacs,
  emacs-config,
  git,
  go,
  gopls,
  jedi-language-server,
  nil,
  nodejs,
  silver-searcher,
  stylish-haskell,
  stdenv,
  symlinkJoin,
  terraform-ls,
  texliveMedium,
  writeShellScriptBin,
}: let
  # Emacs sometimes uses its own `exec-path` to launc binaries and sometimes it
  # fires up a shell and launches binaries from there. At least latex preview
  # cannot find dvipng
  exec-deps = symlinkJoin {
    name = "my-emacs-exec-deps";
    paths = [
      texliveMedium
    ];
  };
  # If we call the regular `emacs` file on darwin, it won't behave correctly
  # with the window manager. Thus, we substitute `emacs` with a script that runs
  # the installed mac application, which does behave correctly.
  wrapDarwin = drv:
    writeShellScriptBin
    "emacs"
    ''
      export PATH=$PATH:${exec-deps}/bin
      exec "${drv}/Applications/Emacs.app/Contents/MacOS/Emacs" "$@"
    '';
  wrapLinux = drv:
    writeShellScriptBin
    "emacs"
    ''
      export PATH=$PATH:${exec-deps}/bin
      exec "${drv}/bin/emacs" "$@"
    '';
  wrap =
    if stdenv.isDarwin
    then wrapDarwin
    else wrapLinux;

  emacs-packages = with emacs.pkgs; [
    colorThemeSolarized
    company
    copilot
    eglot
    flycheck-haskell
    go-mode
    groovy-mode
    haskell-mode
    helm
    helm-ls-git
    helm-org
    helm-projectile
    htmlize
    jedi-language-server
    markdown-mode
    nix-mode
    nodejs # Needed by copilot
    projectile
    s # s seems to be needed by org mode, but it doesn't depend on it so we need to add it explicitly
    terraform-mode
    yaml-mode
    yasnippet
  ];

  sam-packages = [
    aspell-wrapped
  ];

  extra-binaries = [
    git
    go
    jedi-language-server
    nil
    nodejs # Needed by copilot
    silver-searcher
    stylish-haskell
    terraform-ls
  ];

  emacsWithPackages = emacs.pkgs.emacsWithPackages (
    emacs-packages
    ++ sam-packages
    ++ extra-binaries
  );
in
  wrap emacsWithPackages
